/** @compileMembersOnly */
declare enum AIBuildStyle {
    BS_AwayFromResources,
    BS_COUNT,
    BS_Dock,
    BS_ExpansionBase,
    BS_FinishIncompleteStructure,
    BS_ForwardDefense,
    BS_Gates,
    BS_Keep,
    BS_Landmark,
    BS_NearAnchor,
    BS_NearBlueprint,
    BS_NearResourceDropoff,
    BS_NearResources,
    BS_NearSameBlueprint,
    BS_Outpost,
    BS_ProductionBuilding,
    BS_Secure,
    BS_Siege,
    BS_TargetedRequest,
    BS_Tower,
    BS_WallEmplacement,
    BS_Walls,
    BS_Wonder,
}
/** @compileMembersOnly */
declare enum AICombatRangePolicy {
    CombatRangePolicy_Count,
    CombatRangePolicy_Default,
    CombatRangePolicy_INVALID,
    CombatRangePolicy_MeleeRange,
    CombatRangePolicy_Ranged_MaxRange,
    CombatRangePolicy_Ranged_MinRange,
}
/** @compileMembersOnly */
declare enum AICombatType {
    COMBAT_Attack,
    COMBAT_COUNT,
    COMBAT_Default,
    COMBAT_Defend,
}
/** @compileMembersOnly */
declare enum AIDifficultyLevel {
    Count,
    Default,
    Easy,
    Expert,
    Hard,
    INT8_MAX,
    Invalid,
    Max,
    Normal,
}
/** @compileMembersOnly */
declare enum AIMilitaryTargetType {
    AllyClump,
    AttackArea,
    AttackStructure,
    Capture,
    COUNT,
    DefendArea,
    DefendStructure,
    EnemyClump,
    Gather,
    NeutralClump,
    NeutralStructure,
}
/** @compileMembersOnly */
declare enum AITacticTargetPreference {
    TacticTargetPreference_Best,
    TacticTargetPreference_COUNT,
    TacticTargetPreference_HighDamage,
    TacticTargetPreference_LowHealth,
    TacticTargetPreference_Near,
    TacticTargetPreference_NearAndBest,
    TacticTargetPreference_None,
    TacticTargetPreference_Support,
}
/** @compileMembersOnly */
declare enum AITacticType {
    TACTIC_Ability,
    TACTIC_Avoid,
    TACTIC_CapturePoint,
    TACTIC_CaptureTeamWeapon,
    TACTIC_COUNT,
    TACTIC_Cover,
    TACTIC_FinishHealing,
    TACTIC_ForceAttack,
    TACTIC_Hold,
    TACTIC_Lua,
    TACTIC_MinRange,
    TACTIC_Pickup,
    TACTIC_ProvideReinforcementPoint,
    TACTIC_Recrew,
    TACTIC_Sequence,
    TACTIC_Vehicle,
    TACTIC_VehicleDecrew,
}
/** @compileMembersOnly */
declare enum AITaskType {
    TASK_AbilityEncounter,
    TASK_AttackEncounter,
    TASK_COUNT,
    TASK_DefendEncounter,
    TASK_ENCOUNTERS_END,
    TASK_ENCOUNTERS_START,
    TASK_EntityAbility,
    TASK_FormationAttackMoveEncounter,
    TASK_FormationAutoHealState,
    TASK_FormationDefendAreaEncounter,
    TASK_FormationFleeState,
    TASK_FormationHoldableUnloadState,
    TASK_FormationIdleState,
    TASK_FormationLoadToHoldState,
    TASK_FormationMinRangeState,
    TASK_FormationMoveEncounter,
    TASK_FormationMoveState,
    TASK_FormationPathToMeleeState,
    TASK_FormationPhaseEncounter,
    TASK_FormationProtectState,
    TASK_FormationSetupRangedAttackState,
    TASK_FormationSimpleMeleeAttackState,
    TASK_FormationTargetedAbilityState,
    TASK_FormationTargetedConstructState,
    TASK_FormationTransportMoveState,
    TASK_FormationUnitTypeAttackState,
    TASK_GatherEncounter,
    TASK_MoveEncounter,
    TASK_PlayerAbility,
    TASK_ScoutEncounter,
    TASK_SquadAbility,
    TASK_SquadCapture,
    TASK_SquadCombat,
    TASK_SquadCombatState,
    TASK_SquadConstruction,
    TASK_SquadFallbackState,
    TASK_SquadFollow,
    TASK_SquadForwardBase,
    TASK_SquadGather,
    TASK_SquadHold,
    TASK_SquadImmobileCombat,
    TASK_SquadLeader,
    TASK_SquadMoveState,
    TASK_SquadPatrol,
    TASK_SquadPickUp,
    TASK_SquadProduction,
    TASK_SquadRetreatState,
    TASK_SquadSimpleMoveState,
    TASK_SquadTacticState,
    TASK_TownLifeEncounter,
}
/** @compileMembersOnly */
declare enum Availability {
    eAvailablityCOUNT,
    eDefault,
    eLocked,
    eRemoved,
    eUnlocked,
}
/** @compileMembersOnly */
declare enum ButtonIconStyle {
    BIS_Count,
    BIS_Icon,
    BIS_IconState,
}
/** @compileMembersOnly */
declare enum CameraMode {
    CM_COUNT,
    CM_FOLLOW,
    CM_PERSON,
    CM_ROT_TRANS,
}
/** @compileMembersOnly */
declare enum CanProduceResult {
    CANPRODUCE_Disabled,
    CANPRODUCE_Error,
    CANPRODUCE_NoItem,
    CANPRODUCE_NoResources,
    CANPRODUCE_Ok,
    CANPRODUCE_OutOfTerritory,
    CANPRODUCE_PopulationCapFull,
    CANPRODUCE_PrerequisitesItem,
    CANPRODUCE_PrerequisitesProducer,
    CANPRODUCE_ProductionItemFull,
    CANPRODUCE_ProductionQueueFull,
    CANPRODUCE_UpgradeItemFull,
    OutOfReinforceRadius,
}
/** @compileMembersOnly */
declare enum CapType {
    CT_Begin,
    CT_Count,
    CT_Invalid,
    CT_Medic,
    CT_Personnel,
    CT_Vehicle,
}
/** @compileMembersOnly */
declare enum CheckHiddenType {
    CHECK_BOTH,
    CHECK_COUNT,
    CHECK_IN_FOW,
    CHECK_OFFCAMERA,
}
/** @compileMembersOnly */
declare enum CrushMode {
    Count,
    Heavy,
    Light,
    Medium,
    Off,
}
/** @compileMembersOnly */
declare enum DeathReason {
    DEATHREASON_CASUALTY,
    DEATHREASON_COUNT,
    DEATHREASON_DEATH_AS_DRIVER,
    DEATHREASON_NORMAL,
    DEATHREASON_ON_BLUEPRINT_CONVERT,
    DEATHREASON_OUTOFCONTROL,
    DEATHREASON_SUBMERGE,
    DEATHREASON_SYNC_KILL,
    DEATHREASON_WALKABLE_SURFACE,
}
/** @compileMembersOnly */
declare enum DialogButton {
    DB_Button1,
    DB_Button2,
    DB_Button3,
    DB_Close,
    DB_Invalid,
}
/** @compileMembersOnly */
declare enum DialogClass {
    DC_Count,
    DC_Default,
    DC_Iconographic,
}
/** @compileMembersOnly */
declare enum EasingFunction {
    None,
    Sine,
}
/** @compileMembersOnly */
declare enum EasingType {
    EaseIn,
    EaseInOut,
    EaseOut,
}
/** @compileMembersOnly */
declare enum EntityCommandType {
    CMD_Ability,
    CMD_Attack,
    CMD_AttackForced,
    CMD_AttackFromHold,
    CMD_AttackMove,
    CMD_AttackStop,
    CMD_Brace,
    CMD_BuildEntity,
    CMD_BuildSquad,
    CMD_BuildStructure,
    CMD_CancelConstruction,
    CMD_CancelProduction,
    CMD_Capture,
    CMD_Casualty,
    CMD_ChangeCombatSlot,
    CMD_COUNT,
    CMD_Death,
    CMD_DefaultAction,
    CMD_DefuseMine,
    CMD_Destroy,
    CMD_Disable,
    CMD_Enable,
    CMD_Evacuate,
    CMD_Face,
    CMD_FieldSupportConvert,
    CMD_FlightMove,
    CMD_Gather,
    CMD_Halt,
    CMD_HoldPositionOff,
    CMD_HoldPositionOn,
    CMD_InstantBuildSquad,
    CMD_InstantDeath,
    CMD_InstantLoad,
    CMD_InstantSetupTeamWeapon,
    CMD_InstantUpgrade,
    CMD_KnockedBack,
    CMD_Load,
    CMD_Melee,
    CMD_Move,
    CMD_MoveToCover,
    CMD_Paradrop,
    CMD_Patrol,
    CMD_PickUpSimItem,
    CMD_PlaceCharge,
    CMD_Projectile,
    CMD_RallyPoint,
    CMD_RescueCasualty,
    CMD_ResolveOverlap,
    CMD_RetreatMove,
    CMD_SetHoldHeading,
    CMD_SetupTeamWeapon,
    CMD_Stop,
    CMD_StopAbility,
    CMD_Stun,
    CMD_Taunted,
    CMD_Teardown,
    CMD_Teleport,
    CMD_Trade,
    CMD_Unload,
    CMD_UnloadSquads,
    CMD_Upgrade,
    CMD_Vault,
}
/** @compileMembersOnly */
declare enum EntityStateID {
    STATEID_Count,
    STATEID_Dead,
    STATEID_Idle,
    STATEID_Invalid,
    STATEID_Projectile,
}
/** @compileMembersOnly */
declare enum ExplosionDebugVisuals {
    All,
    Count,
    None,
    Selected,
}
/** @compileMembersOnly */
declare enum HintPointActionType {
    HPAT_Artillery,
    HPAT_Attack,
    HPAT_AttackLooping,
    HPAT_Bonus,
    HPAT_Count,
    HPAT_CoverGreen,
    HPAT_CoverRed,
    HPAT_CoverYellow,
    HPAT_Critical,
    HPAT_DeepSnow,
    HPAT_Detonation,
    HPAT_FormationSetup,
    HPAT_Hint,
    HPAT_Movement,
    HPAT_MovementLooping,
    HPAT_Objective,
    HPAT_RallyPoint,
    HPAT_Vaulting,
}
/** @compileMembersOnly */
declare enum HUDFeatureType {
    HUDF_AbilityCard,
    HUDF_CommandCard,
    HUDF_Count,
    HUDF_MiniMap,
    HUDF_None,
    HUDF_Upgrades,
}
/** @compileMembersOnly */
declare enum InputEnabledFlag {
    IEF_All,
    IEF_Camera,
    IEF_Command,
    IEF_Default,
    IEF_None,
    IEF_Selection,
    x0000,
    x0001,
    x0002,
    x0004,
}
/** @compileMembersOnly */
declare enum LabelAlignHorizontal {
    LAH_Center,
    LAH_Count,
    LAH_Justify,
    LAH_Left,
    LAH_Right,
}
/** @compileMembersOnly */
declare enum LabelAlignVertical {
    LAV_Bottom,
    LAV_Center,
    LAV_Count,
    LAV_None,
    LAV_Top,
}
/** @compileMembersOnly */
declare enum LoopType {
    LOOP_INVALID,
    LOOP_NONE,
    LOOP_NORMAL,
    LOOP_TOGGLE_DIRECTION,
}
/** @compileMembersOnly */
declare enum ModalAbilityPhase {
    Cancelled,
    Count,
    Facing,
    Issued,
    None,
    Position,
    TargetingPhase,
    TP_Cancelled,
    TP_Count,
    TP_Facing,
    TP_Issued,
    TP_None,
    TP_Position,
}
/** @compileMembersOnly */
declare enum ModifierApplicationType {
    MAT_Ability,
    MAT_AbilityTypeAndDescendants,
    MAT_Entity,
    MAT_EntityType,
    MAT_EntityTypeAndDescendants,
    MAT_NUMBER_OF_TYPES,
    MAT_Player,
    MAT_Squad,
    MAT_SquadType,
    MAT_SquadTypeAndDescendants,
    MAT_Upgrade,
    MAT_UpgradeTypeAndDescendants,
    MAT_Weapon,
    MAT_WeaponCategory,
    MAT_WeaponType,
    MAT_WeaponTypeAndDescendants,
}
/** @compileMembersOnly */
declare enum ModifierUsageType {
    MUT_Addition,
    MUT_Enable,
    MUT_Multiplication,
    MUT_MultiplicationAddition,
    MUT_MultiplyAdd,
    MUT_NUMBER_OF_TYPES,
    MUT_Set,
}
/** @compileMembersOnly */
declare enum MoodMode {
    MM_Auto,
    MM_ForceCalm,
    MM_ForceTense,
    MM_NumMoodModes,
}
/** @compileMembersOnly */
declare enum ObjectiveFunction {
    FN_LuaTableQuery,
    FN_NumFunctions,
    FN_OnActivate,
    FN_OnSelect,
    FN_OnShow,
}
/** @compileMembersOnly */
declare enum ObjectiveType {
    OT_Bonus,
    OT_Information,
    OT_NumTypes,
    OT_Primary,
    OT_Secondary,
}
/** @compileMembersOnly */
declare enum OwnerType {
    Default,
    LocalEntity,
    LocalSquad,
    Player,
}
/** @compileMembersOnly */
declare enum PlayerCommandType {
    FCMD_COUNT,
    PCMD_Ability,
    PCMD_AIPlayer,
    PCMD_AIPlayer_EncounterNotification,
    PCMD_AIPlayer_EncounterSniped,
    PCMD_AIPlayer_ResourceBonus,
    PCMD_BroadcastMessage,
    PCMD_CancelProduction,
    PCMD_CheatBuildTime,
    PCMD_CheatIgnoreCosts,
    PCMD_CheatResources,
    PCMD_CheatRevealAll,
    PCMD_COUNT,
    PCMD_DetonateCharges,
    PCMD_EndTurn,
    PCMD_FormationSquadGroupAddSquad,
    PCMD_FormationSquadGroupCreateBegin,
    PCMD_FormationSquadGroupCreateEnd,
    PCMD_InstantUpgrade,
    PCMD_PlaceAndConstructEntities,
    PCMD_ResourceDonation,
    PCMD_SlotItemRemove,
    PCMD_StopAbility,
    PCMD_Surrender,
    PCMD_TentativeUpgrade,
    PCMD_TentativeUpgradePurchaseAll,
    PCMD_TentativeUpgradeRemoveAll,
    PCMD_Upgrade,
    PCMD_UpgradeRemove,
    PCMD_WaitObjectDone,
}
/** @compileMembersOnly */
declare enum PlayerState {
    ABORTED,
    COUNT,
    DISCONNECTED,
    INVALID,
    KICKED,
    KILLED,
    LOST,
    OUTOFSYNC,
    PLAYING,
    SURRENDERED,
    WON,
}
/** @compileMembersOnly */
declare enum PresentationEventType {
    GE_CommandReceiverStatusUpdate,
    GE_CommandStatusUpdate,
    GE_DefaultCommandIssued,
    GE_EntityCommandIssued,
    GE_EntityPrecached,
    GE_FormationSquadGroupCommandIssued,
    GE_GameOver,
    GE_GameStart,
    GE_MusicIntensityChange,
    GE_Ping,
    GE_PlayerCommandIssued,
    GE_PlayerDropped,
    GE_PlayerEndStateChanged,
    GE_PlayerHostMigrated,
    GE_PlayerKicked,
    GE_PlayerKilled,
    GE_PlayerLagComplaint,
    GE_PlayerLose,
    GE_PlayerPingOfShame,
    GE_PlayerPingOfShameLocal,
    GE_PlayerWin,
    GE_PresentationSoundEvent,
    GE_SectorOutOfSupply,
    GE_SelectionChanged,
    GE_SpeechTelemetryEvent,
    GE_SquadAudioGameObjectRemoved,
    GE_SquadBuildCommandIssued,
    GE_SquadCommandIssued,
    GE_SquadHitEvent,
    GE_SquadPrecached,
    GE_SubselectionChanged,
    PE_ControlGroupChanged,
    PresentationEvent_Count,
}
/** @compileMembersOnly */
declare enum ProductionItemType {
    Count,
    PITEM_PlayerUpgrade,
    PITEM_Spawn,
    PITEM_SquadReinforce,
    PITEM_SquadUpgrade,
    PITEM_Upgrade,
    SelfConstructed,
}
/** @compileMembersOnly */
declare enum RuleComparison {
    IS_EQUAL,
    IS_GREATER_THAN,
    IS_GREATER_THAN_OR_EQUAL,
    IS_LESS_THAN,
    IS_LESS_THAN_OR_EQUAL,
    IS_NOT_EQUAL,
}
/** @compileMembersOnly */
declare enum RuleSelection {
    ALL_UNITS,
    ANY_ENTITY,
    ANY_SQUAD,
}
/** @compileMembersOnly */
declare enum SaveTriggerType {
    STT_Auto,
    STT_Count,
    STT_Dev,
    STT_Quick,
    STT_Standard,
}
/** @compileMembersOnly */
declare enum ScarType {
    ST_AIENCOUNTER,
    ST_AIENTITY,
    ST_AIPLAYER,
    ST_AISQUAD,
    ST_BOOLEAN,
    ST_CONSTENTITY,
    ST_CONSTPLAYER,
    ST_CONSTSQUAD,
    ST_CONSTVALTABLE,
    ST_Count,
    ST_CUSTOM_TYPES_COUNT,
    ST_CUSTOM_TYPES_END,
    ST_CUSTOM_TYPES_START,
    ST_EGROUP,
    ST_ENTITY,
    ST_ENUM,
    ST_FUNCTION,
    ST_INTEGER,
    ST_LOCSTRING,
    ST_MARKER,
    ST_MODIFIER,
    ST_NIL,
    ST_NUMBER,
    ST_PBG,
    ST_PLAYER,
    ST_PREFAB,
    ST_RESOURCEAMOUNT,
    ST_SCARPOS,
    ST_SGROUP,
    ST_SPLAT,
    ST_SQUAD,
    ST_STRING,
    ST_TABLE,
    ST_UIGAMEITEMINFO,
    ST_UNKNOWN,
}
/** @compileMembersOnly */
declare enum SimulationEventType {
    GE_AbilityCanCast,
    GE_AbilityComplete,
    GE_AbilityExecuted,
    GE_AbilityRecharged,
    GE_AccessoryWeaponFired,
    GE_AIPlayer_EncounterNotification,
    GE_AIPlayer_EncounterSniped,
    GE_AIPlayer_Migrated,
    GE_AITakeOver,
    GE_AnimatorSwap,
    GE_ArtilleryFired,
    GE_BoobyTrapTriggered,
    GE_BroadcastMessage,
    GE_BuildItemCancelled,
    GE_BuildItemComplete,
    GE_BuildItemStart,
    GE_CasualtySquadSpawned,
    GE_ChallengeCustomEvent,
    GE_CommandReceiverStatusUpdate,
    GE_CommandStatusUpdate,
    GE_ConstructionCancelled,
    GE_ConstructionComplete,
    GE_ConstructionFieldComplete,
    GE_ConstructionPlanComplete,
    GE_ConstructionStart,
    GE_CustomUIEvent,
    GE_DamageArea,
    GE_DamageReceived,
    GE_DistrictChanged,
    GE_DistrictCreated,
    GE_DistrictRatingChanged,
    GE_DistrictRemoved,
    GE_DriverDecrewed,
    GE_DriverRecrewed,
    GE_EnemyActivitySpotted,
    GE_EnemyTerritoryEntered,
    GE_EntityAbandoned,
    GE_EntityBlueprintChanged,
    GE_EntityCrushed,
    GE_EntityDespawn,
    GE_EntityKilled,
    GE_EntityLandmarkDestroyed,
    GE_EntityOwnerChange,
    GE_EntityParadropComplete,
    GE_EntityRecrewed,
    GE_EntityRestored,
    GE_EntitySelectionVisualChanged,
    GE_EntitySpawn,
    GE_EntityTeleported,
    GE_EntityWrecked,
    GE_ExperienceGranted,
    GE_FieldSupportChange,
    GE_Garrison,
    GE_GarrisonSquad,
    GE_ImportantUnitSighted,
    GE_InfluenceUpdate,
    GE_ItemAvailabilityChanged,
    GE_LocalPlayerChanged,
    GE_MineDefused,
    GE_MoveFailed,
    GE_MovementNodeUpdated,
    GE_NonGlobalCamoDetected,
    GE_OccupiedBuildingChangedOwner,
    GE_OnHealthExtBPConvert,
    GE_PathfindingBlockersUpdated,
    GE_PathfindingCanBuildBlockersAdded,
    GE_PathfindingCanBuildBlockersRemoved,
    GE_PathFound,
    GE_PlannedStructureCancelled,
    GE_PlannedStructurePlaced,
    GE_PlayerAddEntity,
    GE_PlayerAddResource,
    GE_PlayerBeingAttacked,
    GE_PlayerCheat,
    GE_PlayerDebug_DELETED,
    GE_PlayerDebugBuildOrder,
    GE_PlayerDebugBuildTime,
    GE_PlayerDebugDestroy,
    GE_PlayerDebugEndMatch,
    GE_PlayerDebugFogOfWar,
    GE_PlayerDonation,
    GE_PlayerFormationFinalized,
    GE_PlayerNameChanged,
    GE_PlayerObjectiveChanged,
    GE_PlayerObjectiveDeleted,
    GE_PlayerPhaseUp,
    GE_PlayerRemoveEntity,
    GE_PlayerRemoveSquad,
    GE_PlayerResourcesAwarded,
    GE_PlayerSetResource,
    GE_PlayerSquadInitialized,
    GE_PlayerSubResource,
    GE_PlayerSurrendered,
    GE_PlayerTeamIdUpdated,
    GE_ProjectileFired,
    GE_ProjectileLanded,
    GE_ReinforcementCreated,
    GE_ResourceDepleted,
    GE_ResourceGathererAtCapacity,
    GE_SectorLinkProviderChanged,
    GE_SectorOutOfSupply,
    GE_SpawnActionComplete,
    GE_SpeechAction,
    GE_SpeechWarningAction,
    GE_SquadCalledIn,
    GE_SquadCold,
    GE_SquadFormation,
    GE_SquadFreezing,
    GE_SquadIdleEnter,
    GE_SquadIdleExit,
    GE_SquadItemDeposit,
    GE_SquadItemPickup,
    GE_SquadKilled,
    GE_SquadMembersChanged,
    GE_SquadMerge,
    GE_SquadOwnerChange,
    GE_SquadParadropComplete,
    GE_SquadPinned,
    GE_SquadProductionQueue,
    GE_SquadReplaced,
    GE_SquadRetreat,
    GE_SquadRetreatMsgReceived,
    GE_SquadSizeChanged,
    GE_SquadSpawn,
    GE_SquadSplit,
    GE_SquadTeleported,
    GE_SquadUnloaded,
    GE_SquadVeterancyRank,
    GE_StatsCustomEvent,
    GE_StrategicPointChanged,
    GE_StructureReplaced,
    GE_SuperAbility,
    GE_TerrainAreaDeformed,
    GE_TerritoryCornerDeoccupied,
    GE_TerritoryEdgeDeoccupied,
    GE_TerritoryEntered,
    GE_TickerValuesUpdated,
    GE_UpgradeCancelled,
    GE_UpgradeComplete,
    GE_UpgradeRemoved,
    GE_UpgradeStart,
    GE_UpgradeTentative,
    GE_WaitObjectDone,
    GE_WalkableSurfacePurgeOrphans,
    GE_WallCombatEnded,
    GE_WallCombatStarted,
    GE_WallWalked,
    GE_WeaponChanged,
}
/** @compileMembersOnly */
declare enum SquadCommandType {
    CMD_COUNT,
    SCMD_AbandonTeamWeapon,
    SCMD_Ability,
    SCMD_AddPatrolPoint,
    SCMD_Attack,
    SCMD_AttackMove,
    SCMD_AttackWithinLeashArea,
    SCMD_BuildSquad,
    SCMD_BuildStructure,
    SCMD_CancelProduction,
    SCMD_CancelQueuedCommand,
    SCMD_Capture,
    SCMD_CaptureTeamWeapon,
    SCMD_CombatStance,
    SCMD_COUNT,
    SCMD_DefaultAction,
    SCMD_DefuseCharge,
    SCMD_DefuseMine,
    SCMD_Destroy,
    SCMD_DoPlan,
    SCMD_Evacuate,
    SCMD_Face,
    SCMD_Gather,
    SCMD_HoldPosition,
    SCMD_InstantLoad,
    SCMD_InstantReinforceUnit,
    SCMD_InstantSetupTeamWeapon,
    SCMD_InstantUpgrade,
    SCMD_JoinFormationSquadGroup,
    SCMD_Load,
    SCMD_Merge,
    SCMD_Move,
    SCMD_MoveToCover,
    SCMD_Patrol,
    SCMD_PickUpSimItem,
    SCMD_PickUpSlotItem,
    SCMD_PlaceCharge,
    SCMD_RallyPoint,
    SCMD_Recrew,
    SCMD_ReinforceUnit,
    SCMD_RescueCasualty,
    SCMD_RespondToBeingBreached,
    SCMD_Retreat,
    SCMD_RevertFieldSupport,
    SCMD_SetMoveType,
    SCMD_SetupTeamWeapon,
    SCMD_SlotItemRemove,
    SCMD_StationaryAttack,
    SCMD_Stop,
    SCMD_StopAbility,
    SCMD_Surprise,
    SCMD_Teleport,
    SCMD_Trade,
    SCMD_Unload,
    SCMD_UnloadSquads,
    SCMD_Upgrade,
    SCMD_Vault,
    SCMD_WeaponPreference,
}
/** @compileMembersOnly */
declare enum StanceType {
    STANCE_Attack,
    STANCE_CeaseFire,
    STANCE_Count,
    STANCE_StandGround,
}
/** @compileMembersOnly */
declare enum UIEventType {
    AbilityExectued,
    AllyAttacked,
    BoobyTrap,
    CallToAction,
    CasualtySquadSpawned,
    CommandPointGained,
    ConstructionComplete,
    Count,
    Default,
    EnemyReveal,
    EnemyTerritoryEntered,
    InfantryAttacked,
    InfantryComplete,
    InfantryReplaced,
    MineDetected,
    PhaseUp,
    PlayerAttacked,
    ResourceDepleted,
    Sniped,
    SquadCold,
    SquadFreezing,
    SquadPinned,
    SquadVeterancy,
    StrategicPointCaptured,
    StrategicPointReverting,
    StrategicPointSecured,
    SuperAbility,
    TerritoryEntered,
    UpgradeComplete,
    VehicleAttacked,
    VehicleComplete,
    VehicleReplaced,
}
/** @compileMembersOnly */
declare enum UpgradeOwnerType {
    UOT_COUNT,
    UOT_EntityInSquad,
    UOT_None,
    UOT_Player,
    UOT_Self,
}
/** @compileMembersOnly */
declare enum VisibilityFlag {
    VF_All,
    VF_ComponentChatControl,
    VF_ComponentDecorators,
    VF_ComponentHintPoint,
    VF_ComponentKickers,
    VF_ComponentReplayControls,
    VF_ComponentReplayTaskbar,
    VF_Components,
    VF_ComponentSimulation,
    VF_ComponentTaskbar,
    VF_ComponentTitles,
    VF_Default,
    VF_MiscPaused,
    VF_None,
    VF_VisualArcs,
    VF_VisualCoverPreview,
    VF_VisualDistricts,
    VF_VisualEntityColors,
    VF_VisualMissionArea,
    VF_VisualModals,
    VF_VisualPathPreview,
    VF_Visuals,
    VF_VisualSelectionSilhouettes,
    VF_VisualTerritoryCapturePoint,
    VF_VisualTerritoryOutOfBoundsBorders,
    VF_VisualTerritorySectors,
}
/** @compileMembersOnly */
declare enum WeaponPreference {
    WP_Count,
    WP_Melee,
    WP_Ranged,
}
